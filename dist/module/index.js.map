{"version":3,"sources":["index.tsx"],"names":["React","useCallback","useEffect","useState","Alert","HeaderContainer","Container","MonthList","MonthContent","MonthTitle","DayItemContainer","DayItemContent","DayItemText","days","EpicCalendar","startPoint","endPoint","monthsTitleStyle","containerStyle","contentStyle","onChangeValue","startPointYear","getFullYear","startPointMonth","getMonth","endPointYear","endPointMonth","data","setData","startPointSelected","setStartPointSelected","endPointSelected","setEndPointSelected","reSearch","setReSearch","daysSelected","setDaysSelected","main","initialStartPoint","Date","monthId","day","yearId","initialEndPoint","calendarList","daysSelectedList","startPointCheckEnabled","verifyDay","dayItem","map","item","totalDays","emptySpaces","isWaySelected","push","differenceInTimes","getTime","differenceInDays","totalDaysSelected","startPointDate","endPointDate","length","allData","difference","getPoints","i","year","point","listArrayMonths","getPointSpecific","id","name","getDaysFromMonth","getDate","listArrayDays","dayName","getDay","Array","from","findIndex","v","allDays","selectItem","itemSelected","getItemYear","find","getItemDay","calendarList2","getEndPointExists","getEndDayExists","getStartPointExists","getStartDayExists","newItem","alert","getEndPointPosition","getDayExists","renderItem","ListHeaderComponent","monthItem","keyExtractor","index","String","alignSelf"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\n\r\n// * modules\r\n\r\nimport {\r\n  StyleProp,\r\n  TextStyle,\r\n  ScrollViewProps,\r\n  ViewStyle,\r\n  Alert,\r\n} from \"react-native\";\r\nimport HeaderContainer from \"./HeaderContainer/inde\";\r\n\r\n// * components\r\n\r\nimport {\r\n  Container,\r\n  MonthList,\r\n  MonthContent,\r\n  MonthTitle,\r\n  DayItemContainer,\r\n  DayItemContent,\r\n  DayItemText,\r\n} from \"./styles\";\r\n\r\n// * utils\r\n\r\n//\r\n\r\ninterface Props {\r\n  startPoint: Date;\r\n  endPoint: Date;\r\n  monthsTitleStyle?: StyleProp<TextStyle>;\r\n  containerStyle?: StyleProp<ScrollViewProps>;\r\n  contentStyle?: StyleProp<ViewStyle>;\r\n  onChangeValue: (e: ChangeReturnProps) => void;\r\n}\r\n\r\ninterface ChangeReturnProps {\r\n  totalDaysSelected: number | any;\r\n  startPointDate: Date;\r\n  endPointDate: Date;\r\n}\r\n\r\ninterface DataProps {\r\n  id: number | string;\r\n  name: string;\r\n  totalDays: TotalDaysProps[];\r\n  yearId: number;\r\n  monthId: number;\r\n}\r\n\r\nexport interface TotalDaysProps {\r\n  id: number | string;\r\n  day: number | null;\r\n  startPointSelected?: boolean;\r\n  endPointSelected?: boolean;\r\n  monthId: number;\r\n  yearId: number;\r\n  isWaySelected?: boolean;\r\n  emptySpaces?: boolean;\r\n}\r\n\r\nconst days = [\"Sun\", \"Mon\", \"Tues\", \"Wednes\", \"Thurs\", \"Fri\", \"Satur\"];\r\n\r\nfunction EpicCalendar({\r\n  startPoint,\r\n  endPoint,\r\n  monthsTitleStyle = {},\r\n  containerStyle = {},\r\n  contentStyle = {},\r\n  onChangeValue,\r\n}: Props) {\r\n  const startPointYear = startPoint.getFullYear();\r\n  const startPointMonth = startPoint.getMonth() + 1;\r\n\r\n  const endPointYear = endPoint.getFullYear();\r\n  const endPointMonth = endPoint.getMonth() + 1;\r\n\r\n  const [data, setData] = useState<DataProps[]>([]);\r\n  const [startPointSelected, setStartPointSelected] =\r\n    useState<TotalDaysProps | null>(null);\r\n  const [endPointSelected, setEndPointSelected] =\r\n    useState<TotalDaysProps | null>(null);\r\n  const [reSearch, setReSearch] = useState(false);\r\n  const [daysSelected, setDaysSelected] = useState<TotalDaysProps[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (endPoint < startPoint) {\r\n      throw \"The date in startPoint cant not be smaller than the endPoint\";\r\n    }\r\n    main();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (startPointSelected && endPointSelected && reSearch) {\r\n      let initialStartPoint = new Date(\r\n        `${startPointSelected.monthId}/${startPointSelected.day}/${startPointSelected.yearId}`\r\n      );\r\n      let initialEndPoint = new Date(\r\n        `${endPointSelected.monthId}/${endPointSelected.day}/${endPointSelected.yearId}`\r\n      );\r\n\r\n      let calendarList = [...data];\r\n      var daysSelectedList: TotalDaysProps[] = [];\r\n      var startPointCheckEnabled = false;\r\n\r\n      function verifyDay(dayItem: TotalDaysProps) {\r\n        if (!dayItem.endPointSelected && startPointCheckEnabled) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n\r\n      calendarList.map((item) => {\r\n        item.totalDays.map((dayItem) => {\r\n          if (!dayItem.emptySpaces) {\r\n            if (dayItem.startPointSelected) {\r\n              startPointCheckEnabled = true;\r\n            }\r\n            if (verifyDay(dayItem)) {\r\n              dayItem.isWaySelected = true;\r\n              daysSelectedList.push(dayItem);\r\n            } else {\r\n              startPointCheckEnabled = false;\r\n              dayItem.isWaySelected = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n\r\n      setData(calendarList);\r\n      setDaysSelected(daysSelectedList);\r\n      setReSearch(false);\r\n      var differenceInTimes =\r\n        initialEndPoint.getTime() - initialStartPoint.getTime();\r\n\r\n      var differenceInDays = differenceInTimes / (1000 * 3600 * 24) + 1;\r\n      onChangeValue({\r\n        totalDaysSelected: differenceInDays,\r\n        startPointDate: initialStartPoint,\r\n        endPointDate: initialEndPoint,\r\n      });\r\n    } else if (\r\n      startPointSelected &&\r\n      !endPointSelected &&\r\n      daysSelected.length > 0 &&\r\n      reSearch\r\n    ) {\r\n      let calendarList = [...data];\r\n\r\n      calendarList.map((item) => {\r\n        item.totalDays.map((dayItem) => {\r\n          if (!dayItem.emptySpaces) {\r\n            dayItem.isWaySelected = false;\r\n          }\r\n        });\r\n      });\r\n\r\n      setDaysSelected([]);\r\n      setData(calendarList);\r\n      setReSearch(false);\r\n    }\r\n  }, [startPointSelected, endPointSelected, data, reSearch, daysSelected]);\r\n\r\n  function main() {\r\n    var allData: any[] = [];\r\n    const difference = endPointYear - startPointYear;\r\n    if (endPointYear == startPointYear) {\r\n      allData.push(...getPoints(startPointYear, \"end\", endPointMonth, 0));\r\n    } else {\r\n      for (let i = startPointYear; i <= startPointYear + difference; i++) {\r\n        if (i == startPointYear) {\r\n          allData.push(...getPoints(i, \"start\", 0, endPointYear - i));\r\n        } else {\r\n          allData.push(...getPoints(i, \"end\", endPointMonth, endPointYear - i));\r\n        }\r\n      }\r\n    }\r\n\r\n    setData(allData);\r\n  }\r\n\r\n  function getPoints(\r\n    year: number,\r\n    point: string,\r\n    endPointMonth: number,\r\n    difference: number\r\n  ) {\r\n    var listArrayMonths = [];\r\n\r\n    function getPointSpecific() {\r\n      if (endPointYear == startPointYear || difference == 0) {\r\n        return i <= endPointMonth;\r\n      } else {\r\n        return i <= 12;\r\n      }\r\n    }\r\n\r\n    for (\r\n      var i = point == \"start\" ? startPointMonth : 1;\r\n      getPointSpecific();\r\n      i++\r\n    ) {\r\n      // GET ONLY Months AFTER THIS month ACTTUALY\r\n      if (i === 1) {\r\n        // to month list\r\n\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Janeiro\",\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n          yearId: year,\r\n          monthId: i,\r\n        });\r\n      } else if (i === 2) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Fervereiro\",\r\n          yearId: year,\r\n          monthId: i,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 3) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Março\",\r\n          yearId: year,\r\n          monthId: i,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 4) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Abril\",\r\n          yearId: year,\r\n          monthId: i,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 5) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Maio\",\r\n          yearId: year,\r\n          monthId: i,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 6) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Junho\",\r\n          yearId: year,\r\n\r\n          monthId: i,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 7) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Julho\",\r\n          yearId: year,\r\n\r\n          monthId: i,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 8) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Agosto\",\r\n          yearId: year,\r\n\r\n          monthId: i,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 9) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Setembro\",\r\n          yearId: year,\r\n\r\n          monthId: i,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 10) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Outubro\",\r\n          monthId: i,\r\n          yearId: year,\r\n\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else if (i === 11) {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Novembro\",\r\n          monthId: i,\r\n          yearId: year,\r\n\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      } else {\r\n        listArrayMonths.push({\r\n          id: `${year}${i}`,\r\n          name: \"Dezembro\",\r\n          monthId: i,\r\n          yearId: year,\r\n          totalDays: getDaysFromMonth(new Date(year, i, 0).getDate(), i, year),\r\n        });\r\n      }\r\n    }\r\n\r\n    return listArrayMonths;\r\n  }\r\n\r\n  const getDaysFromMonth = useCallback(\r\n    (totalDays: number, monthId: number, yearId: number) => {\r\n      let listArrayDays: any[] = [];\r\n      let dayName = days[new Date(`${monthId}/1/${yearId}`).getDay()];\r\n\r\n      for (let i = 1; i <= totalDays; i++) {\r\n        listArrayDays.push({\r\n          id: `${monthId}${yearId}${i}`,\r\n          monthId,\r\n          yearId,\r\n          day: i,\r\n          startPointSelected: false,\r\n          endPointSelected: false,\r\n          emptySpaces: false,\r\n        });\r\n      }\r\n\r\n      let emptySpaces = Array.from(\r\n        { length: days.findIndex((item) => item == dayName) },\r\n        (v, i) => i\r\n      );\r\n\r\n      let allDays = [\r\n        ...emptySpaces.map((item) => ({ emptySpaces: true, day: null })),\r\n        ...listArrayDays,\r\n      ];\r\n\r\n      return allDays;\r\n    },\r\n    []\r\n  );\r\n\r\n  const selectItem = useCallback(\r\n    (item: TotalDaysProps) => {\r\n      let itemSelected = item;\r\n      let calendarList = [...data];\r\n      let getItemYear = calendarList.find(\r\n        (item) =>\r\n          item.yearId == itemSelected.yearId &&\r\n          item.monthId == itemSelected.monthId\r\n      );\r\n      let getItemDay = null;\r\n\r\n      if (getItemYear) {\r\n        getItemDay = getItemYear.totalDays.find(\r\n          (item) => item.day == itemSelected.day\r\n        );\r\n      }\r\n\r\n      if (getItemDay) {\r\n        if (!startPointSelected) {\r\n          getItemDay.startPointSelected = true;\r\n          setStartPointSelected(item);\r\n        } else {\r\n          let initialStartPoint = new Date(\r\n            `${startPointSelected.monthId}/${startPointSelected.day}/${startPointSelected.yearId}`\r\n          );\r\n          let initialEndPoint = new Date(\r\n            `${item.monthId}/${item.day}/${item.yearId}`\r\n          );\r\n\r\n          if (endPointSelected && item.id == endPointSelected.id) {\r\n            let calendarList2 = [...data];\r\n\r\n            let getEndPointExists = calendarList2.find(\r\n              (item) =>\r\n                item.yearId == endPointSelected.yearId &&\r\n                item.monthId == endPointSelected.monthId\r\n            );\r\n\r\n            let getEndDayExists = null;\r\n\r\n            if (getEndPointExists) {\r\n              getEndDayExists = getEndPointExists.totalDays.find(\r\n                (item) => item.endPointSelected == true\r\n              );\r\n            }\r\n\r\n            if (getEndDayExists) {\r\n              getEndDayExists.endPointSelected = false;\r\n              setEndPointSelected(null);\r\n            }\r\n            setReSearch(true);\r\n            setData(calendarList2);\r\n          }\r\n\r\n          if (startPointSelected && item.id == startPointSelected.id) {\r\n            let calendarList2 = [...data];\r\n\r\n            let getStartPointExists = calendarList2.find(\r\n              (item) =>\r\n                item.yearId == startPointSelected.yearId &&\r\n                item.monthId == startPointSelected.monthId\r\n            );\r\n\r\n            let getStartDayExists = null;\r\n\r\n            if (getStartPointExists) {\r\n              getStartDayExists = getStartPointExists.totalDays.find(\r\n                (item) => item.startPointSelected == true\r\n              );\r\n            }\r\n\r\n            if (getStartDayExists && !endPointSelected) {\r\n              getStartDayExists.startPointSelected = false;\r\n              setStartPointSelected(null);\r\n            } else if (endPointSelected) {\r\n              let getEndDayExists = null;\r\n\r\n              let getEndPointExists = calendarList2.find(\r\n                (item) =>\r\n                  item.yearId == endPointSelected.yearId &&\r\n                  item.monthId == endPointSelected.monthId\r\n              );\r\n\r\n              if (getEndPointExists) {\r\n                getEndDayExists = getEndPointExists.totalDays.find(\r\n                  (item) => item.endPointSelected == true\r\n                );\r\n              }\r\n\r\n              let newItem = {\r\n                ...item,\r\n                startPointSelected: true,\r\n              };\r\n              getStartDayExists = newItem;\r\n              if (getEndDayExists) getEndDayExists.endPointSelected = false;\r\n              setStartPointSelected(newItem);\r\n              setEndPointSelected(null);\r\n            }\r\n            setData(calendarList2);\r\n            setReSearch(true);\r\n\r\n            return;\r\n          }\r\n\r\n          if (initialEndPoint < initialStartPoint) {\r\n            Alert.alert(\r\n              \"Calendário\",\r\n              \"Você deve selecionar dias a frente do ponto inicial.\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          if (endPointSelected && item.id == endPointSelected.id) {\r\n            return;\r\n          }\r\n\r\n          // * get existe end point\r\n\r\n          function getEndPointPosition(item: any) {\r\n            if (endPointSelected) {\r\n              return (\r\n                item.yearId == endPointSelected.yearId &&\r\n                item.monthId == endPointSelected.monthId\r\n              );\r\n            }\r\n\r\n            return (\r\n              item.yearId == itemSelected.yearId &&\r\n              item.monthId == itemSelected.monthId\r\n            );\r\n          }\r\n\r\n          let getEndPointExists = calendarList.find(\r\n            (item) =>\r\n              getEndPointPosition(item) &&\r\n              item.totalDays.find((item) => item.endPointSelected == true)\r\n          );\r\n\r\n          let getDayExists = null;\r\n\r\n          if (getEndPointExists) {\r\n            getDayExists = getEndPointExists.totalDays.find(\r\n              (item) => item.endPointSelected == true\r\n            );\r\n          }\r\n\r\n          if (getDayExists) {\r\n            getDayExists.endPointSelected = false;\r\n          }\r\n\r\n          getItemDay.endPointSelected = true;\r\n          setEndPointSelected(getItemDay);\r\n          setReSearch(true);\r\n        }\r\n      }\r\n      setReSearch(true);\r\n      setData(calendarList);\r\n    },\r\n    [data, startPointSelected, endPointSelected]\r\n  );\r\n\r\n  const renderItem = useCallback(\r\n    ({ item }) => {\r\n      return (\r\n        <DayItemContent\r\n          selected={item.startPointSelected || item.endPointSelected}\r\n          isWaySelected={item.isWaySelected || false}\r\n          disabled={item.emptySpaces}\r\n          onPress={() => selectItem(item)}\r\n        >\r\n          <DayItemText\r\n            selected={item.startPointSelected || item.endPointSelected}\r\n          >\r\n            {item.day}\r\n          </DayItemText>\r\n        </DayItemContent>\r\n      );\r\n    },\r\n    [selectItem]\r\n  );\r\n\r\n  const ListHeaderComponent = useCallback(\r\n    ({ monthItem }) => (\r\n      <MonthTitle style={monthsTitleStyle}>\r\n        {monthItem.name} de {monthItem.yearId}\r\n      </MonthTitle>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const keyExtractor = useCallback((item, index) => String(index), []);\r\n\r\n  return (\r\n    <Container style={containerStyle}>\r\n      <HeaderContainer />\r\n      <MonthList showsVerticalScrollIndicator={false}>\r\n        {data?.map((monthItem) => (\r\n          <MonthContent key={monthItem.id} style={contentStyle}>\r\n            <ListHeaderComponent monthItem={monthItem} />\r\n            <DayItemContainer\r\n              data={monthItem.totalDays}\r\n              numColumns={7}\r\n              renderItem={renderItem}\r\n              keyExtractor={keyExtractor}\r\n              contentContainerStyle={{\r\n                alignSelf: \"center\",\r\n              }}\r\n              nestedScrollEnabled\r\n              scrollEnabled={false}\r\n              scrollToOverflowEnabled={false}\r\n              overScrollMode=\"never\"\r\n            />\r\n          </MonthContent>\r\n        ))}\r\n      </MonthList>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EpicCalendar;\r\n// Desenvolvido por Hubert Ryan\r\n"]}